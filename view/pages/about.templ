package pages

import (
	"github.com/andrei0427/lifeofmarrow/view/helpers"
	"github.com/andrei0427/lifeofmarrow/view/layout"
)

type AboutEntity struct {
	Sections []helpers.ContentSection `json:"sections"`
}

templ About(props AboutEntity) {
	@layout.Base(layout.SEOInfo{Title: "About",
		Url:         "/about",
		IsHome:      false,
		Description: "Learn more about the LifeofMarrow concept and who I am.",
	}) {
		<div
			class="relative isolate overflow-hidden bg-white px-6 py-24 sm:py-32 lg:overflow-visible lg:px-0"
		>
			<div class="absolute inset-0 -z-10 overflow-hidden">
				<svg
					class="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-emerald-100 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]"
					aria-hidden="true"
				>
					<defs>
						<pattern
							id="e813992c-7d03-4cc4-a2bd-151760b470a0"
							width="200"
							height="200"
							x="50%"
							y="-1"
							patternUnits="userSpaceOnUse"
						>
							<path d="M100 200V.5M.5 .5H200" fill="none"></path>
						</pattern>
					</defs>
					<svg x="50%" y="-1" class="overflow-visible fill-emerald-50">
						<path
							d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z"
							stroke-width="0"
						></path>
					</svg>
					<rect
						width="100%"
						height="100%"
						stroke-width="0"
						fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)"
					></rect>
				</svg>
			</div>
			<div class="w-screen mx-auto">
				<div class="flex flex-col gap-y-8 lg:gap-y-12">
					if len(props.Sections) > 1 {
						<div class="flex flex-col lg:flex-row gap-x-12 items-center">
							<div class="px-6 lg:px-8">
								<h1 class="my-2 text-3xl text-center lg:text-left font-bold tracking-tight text-gray-900 sm:text-4xl">
									{ props.Sections[0].Title }
								</h1>
								<div>
									<div class="text-base text-justify leading-7 text-gray-700">
										{ props.Sections[0].Text }
									</div>
									if len(props.Sections[0].CTALink.Link) > 0 {
										<a
											class="text-emerald-600 leading-6 font-bold inline-block pt-4"
											href={ templ.SafeURL(props.Sections[0].CTALink.Link) }
										>
											{ props.Sections[0].CTALink.Title }
											<span aria-hidden="true">&rarr;</span>
										</a>
									}
								</div>
							</div>
							<img
								class="w-1/2 rounded-xl bg-gray-900 shadow-xl ring-1 ring-gray-400/10 object-cover"
								src={ helpers.GetStrapiMediaUrl(props.Sections[0].Image.Data.Attributes.Url) }
								alt="about section image"
							/>
						</div>
					}
					for i, s := range props.Sections {
						if i > 0 {
							<div class="flex flex-col px-16 mx-auto w-screen">
								<div class="px-6 lg:px-8">
									<div class="mx-auto sm:text-center">
										<p class="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
											{ s.Title }
										</p>
										<div class="max-w-3xl mx-auto">
											<p class="mt-6 text-justify text-base leading-7 text-gray-700">
												{ s.Text }
											</p>
											if len(s.CTALink.Link) > 0 {
												<a
													class="text-emerald-600 leading-6 font-bold inline-block pt-2"
													href={ templ.SafeURL(s.CTALink.Link) }
												>
													{ s.CTALink.Title }
													<span aria-hidden="true">&rarr;</span>
												</a>
											}
										</div>
									</div>
								</div>
								<img
									src={ helpers.GetStrapiMediaUrl(s.Image.Data.Attributes.Url) }
									alt="section image"
									class="rounded-xl mt-4 shadow-2xl ring-1 ring-gray-400/10 object-cover"
									height="500"
								/>
							</div>
						}
					}
				</div>
			</div>
		</div>
	}
}
